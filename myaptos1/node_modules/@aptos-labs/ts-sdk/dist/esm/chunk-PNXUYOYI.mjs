import{i as s}from"./chunk-LG3DAAPD.mjs";import{b as u}from"./chunk-IMGLHDIA.mjs";import{a as c}from"./chunk-KA6FZNWP.mjs";import{b as t}from"./chunk-QPP6BX53.mjs";import{b as d}from"./chunk-HPZ2S4FE.mjs";import{b as n}from"./chunk-BCUSI3N6.mjs";var o=class r extends u{constructor(e,i){super(),this.jwkAddress=t.from(e),this.keylessPublicKey=i}authKey(){let e=new d;return e.serializeU32AsUleb128(4),e.serializeFixedBytes(this.bcsToBytes()),c.fromSchemeAndBytes({scheme:2,input:e.toUint8Array()})}toUint8Array(){return this.bcsToBytes()}toString(){return n.fromHexInput(this.toUint8Array()).toString()}verifySignature(e){throw new Error("Not yet implemented")}serialize(e){this.jwkAddress.serialize(e),this.keylessPublicKey.serialize(e)}static deserialize(e){let i=t.deserialize(e),l=s.deserialize(e);return new r(i,l)}static isPublicKey(e){return e instanceof r}static create(e){return new r(e.jwkAddress,s.create(e))}static fromJwtAndPepper(e){return new r(e.jwkAddress,s.fromJwtAndPepper(e))}static isInstance(e){return"jwkAddress"in e&&e.jwkAddress instanceof t&&"keylessPublicKey"in e&&e.keylessPublicKey instanceof s}};export{o as a};
//# sourceMappingURL=chunk-PNXUYOYI.mjs.map